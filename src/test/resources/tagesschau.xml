<container>

    <stream
        id="video"
        class="stream.io.MJpegImageStream"
        url="file:/Volumes/RamDisk/video/test.mjpeg" />
<!-- 
        url="http://mattis.special-operations.de/video/20120911-scaled.raw" />
        url="http://kirmes.cs.uni-dortmund.de/video/video.mjpeg.raw" />
        url="file:/Volumes/RamDisk/video.mjpeg.raw" />
-->

    <process input="video" >
 <!--        
        <stream.image.DisplayImage image="data" />
-->        
        
        <CreateID key="frame:id" />

<!-- 
		<stream.news.helper.AddNewsshowLabels />
 -->        
				
		<stream.image.features.AverageRGB />
		<stream.image.features.MedianRGB />
		<stream.image.features.StandardDeviationRGB />
        <PrintData />
            
        <stream.image.DiffImage output="image:diff" threshold="0"/>
            <!-- 
		<stream.news.learner.anchorshotdetection.ApplyDecisionTreeModel predictionkey="@prediction:anchorshot" />
		
    	<stream.learner.evaluation.PredictionError label="@label:anchorshot" />
             -->
    	
    	
    	
		<!--
        <stream.plotter.Plotter
            history="1000"
            keepOpen="true"
            keys="frame:red:standardDeviation" />
        
		<stream.image.features.CenterOfMass colorchannel="red" normalized="true" />
		<stream.image.features.CenterOfMass colorchannel="black_and_white" normalized="true" />
		<stream.image.features.MedianRGB />
        <stream.io.CsvWriter url="file:///C:/Users/Matthias/Documents/SchulteSVN/Diplomarbeit/data/news20120911/stream_features.csv" 
          separator=";" keys="frame:id,frame:red:CenterOfMass:normalizedY,frame:blue:median,frame:black_and_white:CenterOfMass:normalizedX,@label:anchorshot"/>
		
		 
		<stream.image.features.CenterOfMass colorchannel="green" normalized="true" />
		<stream.image.features.CenterOfMass colorchannel="blue" normalized="true" />

		<stream.news.learner.anchorshotdetection.AnchorshotModelCreator />
		 
		 -->
        <stream.image.DisplayImage image="frame:image" />
		<stream.image.DisplayImage image="image:diff" />
        
    	
<!--     	
        <stream.laser.DiffImage threshold="0"/>
        <stream.image.ColorToGrayscale />
        <stream.image.AverageRGB />
        <stream.news.learner.sbdetection.GrayThreshold t="35" />
        <stream.news.helper.ErrorOutput />
        
            
-->            


<!--  
    
    	<stream.statistics.Sum keys="@error:shotboundary" />
        
        <PrintData />
		<Skip condition="%{data.frame:id} @lt 2" />        
          
-->
          
<!-- 
-->
<!--  
        <stream.image.filters.Smoothing output="data" windowSize="8" />
        <stream.image.ColorDiscretization output="data" quantilesPerChannel="2" /> 
       
        <stream.image.BorderDetection output="data" tolerance="1"/>  
        

        <PrintData />
-->
    </process>
</container>
